FROM <BASE_FILE>

# Dockerfile template for a particular fault instance
MAINTAINER Chris Timperley "christimperley@gmail.com"

ENV FAULT_ID <FAULT_ID>
ENV SCENARIO_NAME "sir-${PROGRAM_NAME}-${PROGRAM_VERSION}-${FAULT_ID}"

## Activate selected fault, build the faulty program and construct the test mapping
RUN sed -i "s;/\* #define FAULTY_F_${FAULT_ID} \*/;#define FAULTY_F_${FAULT_ID};" source/FaultSeeds.h && \
    (cd source && make build) && \
    pythia map "${EXECUTABLE}"

# Preprocess the source code file and remove all others
RUN sed -i 's#\$(COMPILE_PARAMETERS)#$(COMPILE_PARAMETERS) -save-temps#' source/Makefile && \
    (cd source && make build) && \
    mv "${PREPROCESSED_FILE}" "${SOURCE_FILE}" && \
    rm -f source/*.exe source/*.i source/*.o source/*.s && \
    sed -i 's# -save-temps##' source/Makefile

# Determine the number of positive and negative tests before generating the
# problem.json file
RUN jq 'keys[]' 'map.pythia.json' | sed 's/\"//g' | \
      grep -oP '(?<=n)\d+' | sort -g | tail -n 1 > /tmp/num_negative && \
    jq 'keys[]' 'map.pythia.json' | sed 's/\"//g' | \
      grep -oP '(?<=p)\d+' | sort -g | tail -n 1 > /tmp/num_positive && \
    sed -i "s/<<PROGRAM_NAME>>/${PROGRAM_NAME}/g" problem.json && \
    sed -i "s/<<SCENARIO_NAME>>/${SCENARIO_NAME}/g" problem.json && \
    sed -i "s/<<POSITIVE_TESTS>>/$(cat /tmp/num_positive)/g" problem.json && \
    sed -i "s/<<NEGATIVE_TESTS>>/$(cat /tmp/num_negative)/g" problem.json && \
    sudo rm /tmp/* -rf
