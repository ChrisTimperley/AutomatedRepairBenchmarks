FROM squareslab/repairbox:manybugs-gzip

ARG scenario
ENV SCENARIO_NAME ${scenario}

# - downloads scenario archive
# - throws away useless files
# - modifies naming of files to match RepairBox standards
# - fixes test harness to work on Docker container
RUN wget  -nv http://repairbenchmarks.cs.umass.edu/ManyBugs/scenarios/${SCENARIO_NAME}.tar.gz \
          -O scenario.tar.gz && \
    tar -xf scenario.tar.gz && \
    rm -f scenario.tar.gz && \
    mv gzip-* scenario && \
    cd scenario && \
    rm -rf fixed-program.txt *.cache coverage.* coverage limit* sanity *debug* compile.pl local-root && \
    rm -rf gzip configuration-oracle *~ && \
    mv fix-failures bug-info && \
    mv bug-failures bug-info && \
    mv fix.lines bug-info && \
    mv fault.lines bug-info && \
    mv bugged-program.txt preprocessed/manifest.txt && \
    cd /experiment && \
    mv scenario/* . && rm -rf scenario && \
    sed -i "s#cd gzip#cd src#g" test.sh
#    sed -i "s#/usr/bin/perl#perl#" test.sh && \
#    sed -i "s#${OLD_LOCATION}#/experiment#g" test.sh && \
#    sed -i "s#/experiment/limit#timeout 5#g" test.sh && \

RUN cd src && \
    git checkout $(grep "bug revision:" ../bug-info/scenario-data.txt | cut -d " " -f3) && \
    ./bootstrap && \
    ./configure

#RUN sudo chown -R docker /experiment && \
#    cd /experiment/src && \
#  ./configure "CFLAGS=-m32" "CXXFLAGS=-m32" "LDFLAGS=-m32"
#RUN sed -i "s/ _GL_WARN_ON_USE (gets,/#/g" src/lib/stdio.in.h
