746c746
< 			goto bad;
---
> 			goto done;
749a750
> done:
751c752
< 	return 1;
---
> 	return (TRUE);
754c755
< 	return 0;
---
> 	return (FALSE);
790,832c791,816
< 	if (spp == 1) {
< 	  tsize_t biasSize = TIFFScanlineSize(bias);
< 	  tsize_t bufSize = TIFFScanlineSize(in);
< 	  tdata_t buf, biasBuf;
< 	  uint32 biasWidth = 0, biasLength = 0;
< 	  TIFFGetField(bias, TIFFTAG_IMAGEWIDTH, &biasWidth);
< 	  TIFFGetField(bias, TIFFTAG_IMAGELENGTH, &biasLength);
< 	  if (biasSize == bufSize && 
< 	      imagelength == biasLength && imagewidth == biasWidth) {
< 		uint16 sampleBits = 0;
< 		biasFn *subtractLine;
< 		TIFFGetField(in, TIFFTAG_BITSPERSAMPLE, &sampleBits);
< 		subtractLine = lineSubtractFn (sampleBits);
< 		if (subtractLine) {
< 			uint32 row;
< 			buf = _TIFFmalloc(bufSize);
< 			biasBuf = _TIFFmalloc(bufSize);
< 			for (row = 0; row < imagelength; row++) {
< 				if (TIFFReadScanline(in, buf, row, 0) < 0
< 				    && !ignore)
< 					goto bad;
< 			if (TIFFReadScanline(bias, biasBuf, row, 0) < 0
< 			    && !ignore)
< 				goto bad;
< 			subtractLine (buf, biasBuf, imagewidth);
< 			if (TIFFWriteScanline(out, buf, row, 0) < 0)
< 				goto bad;
< 			}
< 		
< 			_TIFFfree(buf);
< 			_TIFFfree(biasBuf);
< 			TIFFSetDirectory(bias,
< 				TIFFCurrentDirectory(bias)); /* rewind */
< 			return 1;
< bad:
< 			_TIFFfree(buf);
< 			_TIFFfree(biasBuf);
< 			return 0;
< 	    } else {
< 	      fprintf (stderr, "No support for biasing %d bit pixels\n",
< 		       sampleBits);
< 	      return 0;
< 	    }
---
>   if (spp == 1) {
>     tsize_t biasSize = TIFFScanlineSize(bias);
>     tsize_t bufSize = TIFFScanlineSize(in);
>     tdata_t buf, biasBuf;
>     uint32 biasWidth = 0, biasLength = 0;
>     TIFFGetField(bias, TIFFTAG_IMAGEWIDTH, &biasWidth);
>     TIFFGetField(bias, TIFFTAG_IMAGELENGTH, &biasLength);
>     if (biasSize == bufSize && 
>         imagelength == biasLength && imagewidth == biasWidth) {
>       uint16 sampleBits = 0;
>       biasFn *subtractLine;
>       TIFFGetField(in, TIFFTAG_BITSPERSAMPLE, &sampleBits);
>       subtractLine = lineSubtractFn (sampleBits);
>       if (subtractLine) {
>         uint32 row;
>         buf = _TIFFmalloc(bufSize);
>         biasBuf = _TIFFmalloc(bufSize);
> 	for (row = 0; row < imagelength; row++) {
> 	  if (TIFFReadScanline(in, buf, row, 0) < 0 && !ignore)
> 		break;
> 	  if (TIFFReadScanline(bias, biasBuf, row, 0) < 0 && !ignore)
> 		break;
>           subtractLine (buf, biasBuf, imagewidth);
> 	  if (TIFFWriteScanline(out, buf, row, 0) < 0) {
>             _TIFFfree(buf); _TIFFfree(biasBuf);
>             return FALSE;
834,841d817
< 	  fprintf (stderr,"Bias image %s,%d\nis not the same size as %s,%d\n",
< 	           TIFFFileName(bias), TIFFCurrentDirectory(bias),
< 	           TIFFFileName(in), TIFFCurrentDirectory(in));
< 	  return 0;
< 	} else {
< 	  fprintf (stderr, "Can't bias %s,%d as it has >1 Sample/Pixel\n",
< 	           TIFFFileName(in), TIFFCurrentDirectory(in));
< 	  return 0;
843c819,836
< 
---
> 	_TIFFfree(buf); _TIFFfree(biasBuf);
>         TIFFSetDirectory (bias, TIFFCurrentDirectory(bias)); /* rewind */
> 	return TRUE;
>         
>       }else{
>         fprintf (stderr, "No support for biasing %d bit pixels\n", sampleBits);
>         return FALSE;
>       }
>     }
>     fprintf (stderr,"Bias image %s,%d\nis not the same size as %s,%d\n",
>              TIFFFileName(bias), TIFFCurrentDirectory(bias),
>              TIFFFileName(in), TIFFCurrentDirectory(in));
>     return FALSE;
>   }else{
>     fprintf (stderr, "Can't bias %s,%d as it has >1 Sample/Pixel\n",
>              TIFFFileName(in), TIFFCurrentDirectory(in));
>     return FALSE;
>   }
863,865c856,860
< 				goto bad;
< 			if (TIFFWriteEncodedStrip(out, s, buf, cc) < 0)
< 				goto bad;
---
> 				break;
> 			if (TIFFWriteEncodedStrip(out, s, buf, cc) < 0) {
> 				_TIFFfree(buf);
> 				return (FALSE);
> 			}
869c864
< 		return 1;
---
> 		return (TRUE);
871,875c866
< 	return 0;
< 
< bad:
< 	_TIFFfree(buf);
< 	return 0;
---
> 	return (FALSE);
891c882
< 				goto bad;
---
> 				goto done;
895a887
> done:
897c889
< 	return 1;
---
> 	return (TRUE);
900c892
< 	return 0;
---
> 	return (FALSE);
919c911
< 				goto bad;
---
> 				goto done;
929a922
> done:
932c925
< 	return 1;
---
> 	return (TRUE);
936c929
< 	return 0;
---
> 	return (FALSE);
955c948
< 				goto bad;
---
> 				goto done;
965a959
> done:
