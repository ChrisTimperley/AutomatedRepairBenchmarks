50a51
> static zend_object_handlers spl_filesystem_object_constru_check_handlers;
52c53
< /* decalre the class entry */
---
> /* declare the class entry */
135c136
< static zend_object_value spl_filesystem_object_new_ex(zend_class_entry *class_type, spl_filesystem_object **obj TSRMLS_DC)
---
> static zend_object_value spl_filesystem_object_new_ex(zend_class_entry *class_type, zend_object_handlers *handlers, spl_filesystem_object **obj TSRMLS_DC)
145c146,148
< 	if (obj) *obj = intern;
---
> 	if (obj) {
> 		*obj = intern;
> 	}
151c154,158
< 	retval.handlers = &spl_filesystem_object_handlers;
---
> 	if (!handlers) {
> 		retval.handlers = &spl_filesystem_object_handlers;
> 	} else {
> 		retval.handlers = handlers;
> 	}
160c167,173
< 	return spl_filesystem_object_new_ex(class_type, NULL TSRMLS_CC);
---
> 	return spl_filesystem_object_new_ex(class_type, NULL /* spl_filesystem_object_handlers */, NULL TSRMLS_CC);
> }
> /* }}} */
> 
> static zend_object_value spl_filesystem_object_constru_check_new(zend_class_entry *class_type TSRMLS_DC)
> {
> 	return spl_filesystem_object_new_ex(class_type, &spl_filesystem_object_constru_check_handlers, NULL TSRMLS_CC);
310c323
< 	new_obj_val = spl_filesystem_object_new_ex(old_object->ce, &intern TSRMLS_CC);
---
> 	new_obj_val = spl_filesystem_object_new_ex(old_object->ce, NULL, &intern TSRMLS_CC);
409c422
< 	return_value->value.obj = spl_filesystem_object_new_ex(ce, &intern TSRMLS_CC);
---
> 	return_value->value.obj = spl_filesystem_object_new_ex(ce, NULL, &intern TSRMLS_CC);
452c465
< 		return_value->value.obj = spl_filesystem_object_new_ex(ce, &intern TSRMLS_CC);
---
> 		return_value->value.obj = spl_filesystem_object_new_ex(ce, NULL, &intern TSRMLS_CC);
473c486
< 		return_value->value.obj = spl_filesystem_object_new_ex(ce, &intern TSRMLS_CC);
---
> 		return_value->value.obj = spl_filesystem_object_new_ex(ce, NULL, &intern TSRMLS_CC);
622a636,656
> static int spl_filesystem_object_constructor_validator(void *object_data TSRMLS_DC) /* {{{ */
> {
> 	spl_filesystem_object *fsobj = object_data;
> 	
> 	/* check if GlobIterator and Spl[Temp]FileObject had their constructor 
> 	 * and check if everything went smoothly/there was an exception not cleared
> 	 * or if there was an userspace class that did not call the parent
> 	 * constructor or cleared its exception */
> 	
> 	return (fsobj->u.dir.entry.d_name[0] != '\0' /* GlobIterator */ ||
> 			fsobj->orig_path != NULL /* Spl[Temp]FileObject */);
> }
> /* }}} */
> 
> static zend_function *spl_filesystem_object_get_constructor(zval *object TSRMLS_DC) /* {{{ */
> {
> 	return php_spl_get_constructor_helper(object,
> 			spl_filesystem_object_constructor_validator TSRMLS_CC);
> }
> /* }}} */
> 
2952c2986
< 
---
> 	
2970a3005,3009
> 	
> 	/* These need the parent constructor call check if extended in userspace.
> 	 * The previous ones probably don't work very well if */
> 	memcpy(&spl_filesystem_object_constru_check_handlers, &spl_filesystem_object_handlers, sizeof(zend_object_handlers));
> 	spl_filesystem_object_constru_check_handlers.get_constructor = spl_filesystem_object_get_constructor;
2973c3012
< 	REGISTER_SPL_SUB_CLASS_EX(GlobIterator, FilesystemIterator, spl_filesystem_object_new, spl_GlobIterator_functions);
---
> 	REGISTER_SPL_SUB_CLASS_EX(GlobIterator, FilesystemIterator, spl_filesystem_object_constru_check_new, spl_GlobIterator_functions);
2977c3016
< 	REGISTER_SPL_SUB_CLASS_EX(SplFileObject, SplFileInfo, spl_filesystem_object_new, spl_SplFileObject_functions);
---
> 	REGISTER_SPL_SUB_CLASS_EX(SplFileObject, SplFileInfo, spl_filesystem_object_constru_check_new, spl_SplFileObject_functions);
2986c3025
< 	REGISTER_SPL_SUB_CLASS_EX(SplTempFileObject, SplFileObject, spl_filesystem_object_new, spl_SplTempFileObject_functions);
---
> 	REGISTER_SPL_SUB_CLASS_EX(SplTempFileObject, SplFileObject, spl_filesystem_object_constru_check_new, spl_SplTempFileObject_functions);
